# This is a basic workflow to help you get started with Actions

name: Node CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        # `POSTGRES_HOST` is `postgres`
        env:
          # optional (defaults to `postgres`)
          POSTGRES_DB: postgres_db
          # required
          POSTGRES_PASSWORD: pass123
        ports:
          # maps tcp port 5432 on service container to the host
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    env:
      PORT: 4000
      JWT_SECRET_KEY: aabab2e51f7318528e8b8bb03011bdde723dfe978eb7b5aa92e3d20c36bd5afd8a651301c05cbfabd4519268cb88f5e71dcb4134af226310953cfe314ced4c9c
      
      TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
      TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
      TWILIO_FROM_NUMBER: ${{ secrets.TWILIO_FROM_NUMBER }}
      TWILIO_CUSTOMER_NUMBER: ${{ secrets.TWILIO_CUSTOMER_NUMBER }}

      CI_DB_USERNAME: postgres
      CI_DB_PASSWORD: pass123
      CI_DB_NAME: postgres_db
      CI_DB_HOSTNAME: localhost
      
      ADMIN_PHONE: ${{ secrets.ADMIN_PHONE }}
      ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Install üîß
        run: yarn install

      - name: Test üö®
        run: yarn test
